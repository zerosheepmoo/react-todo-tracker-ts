{"version":3,"sources":["components/Button.tsx","components/Header.tsx","components/Task.tsx","components/Tasks.tsx","components/AddTask.tsx","components/Footer.tsx","components/About.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","color","text","onClick","className","style","backgroundColor","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","toString","currentTarget","checked","Footer","to","About","mockup","mockup2","json","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","data","console","error","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updatedTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"mRAceA,EAX+B,SAAC,GAA4C,IAAD,IAAzCC,aAAyC,MAAjC,YAAiC,EAApBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACxE,OACI,wBACIC,UAAU,MACVC,MAAO,CAAEC,gBAAiBL,GAC1BE,QAASA,EAHb,SAIKD,KCQEK,EAXgC,SAAC,GAA8C,IAAD,IAA5CC,aAA4C,MAApC,eAAoC,EAApBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACtEC,EAAWC,cAEjB,OACI,yBAAQR,UAAU,SAAlB,UACI,6BAAKI,IACkB,4BAAtBG,EAASE,UAA0C,cAAC,EAAD,CAAQZ,MAAOS,EAAU,MAAQ,QAASR,KAAMQ,EAAU,QAAS,MAAOP,QAASM,QCApIK,EAT2B,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SACxD,OACI,sBAAKb,UAAS,eAAUW,EAAKG,SAAW,WAAY,IAAMC,cAAe,kBAAMF,EAASF,EAAKK,KAA7F,UACI,+BAAKL,EAAKb,KAAV,IAAgB,qBAAKG,MAAO,CAACJ,MAAO,MAAOoB,OAAO,WAAYlB,QAAS,kBAAMa,EAASD,EAAKK,KAA3E,kBAChB,4BAAIL,EAAKO,UCONC,EAV8B,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOR,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAC5D,OACI,mCACKO,EAAMC,KAAI,SAACV,GAAD,OACP,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,SAAUA,EAAUC,SAAUA,GAAnDF,EAAKK,UCwCjBM,EAzCiC,SAAC,GAAe,IAAbjB,EAAY,EAAZA,MAAY,EAEnCkB,mBAAS,IAF0B,mBAEpDzB,EAFoD,KAE9C0B,EAF8C,OAGrCD,mBAAS,IAH4B,mBAGpDL,EAHoD,KAG/CO,EAH+C,OAI3BF,oBAAS,GAJkB,mBAIpDT,EAJoD,KAI1CY,EAJ0C,KAoB3D,OACI,uBAAM1B,UAAU,WAAW2B,SAfd,SAACC,GACdA,EAAEC,iBACG/B,GAKLO,EAAM,CAAEP,OAAMoB,MAAKJ,aAEnBU,EAAQ,IACRC,EAAO,IACPC,GAAY,IARRI,MAAM,sBAYV,UACI,sBAAK9B,UAAU,eAAf,UACI,0CACA,uBAAO+B,KAAK,OAAOC,YAAY,WAAWhC,UAAU,eAAeiC,MAAOnC,EAAMoC,SAAU,SAACN,GAAD,OAAOJ,EAAQI,EAAEO,OAAOF,UAClH,uBAAOF,KAAK,OAAOC,YAAY,iBAAiBhC,UAAU,eAAeiC,MAAOf,EAAKgB,SAAU,SAACN,GAAD,OAAOH,EAAOG,EAAEO,OAAOF,UACtH,iDACA,uBACIF,KAAK,WACL/B,UAAU,kCACViC,MAAOnB,EAASsB,WAChBF,SAAU,SAACN,GAAD,OAAOF,EAAYE,EAAES,cAAcC,UAC7CA,QAASxB,OAIjB,uBAAOd,UAAU,gBAAgB+B,KAAK,SAASE,MAAM,kBC/BlDM,EATmB,WAC9B,OACI,mCACI,qDACA,cAAC,IAAD,CAAMC,GAAG,+BAAT,uBCKGC,EATkB,WAC7B,OACI,gCACI,+CACA,cAAC,IAAD,CAAMD,GAAG,0BAAT,yBCENE,EAAgB,iBAAM,CAAC,CAAC1B,GAAI,OAAQlB,KAAM,UAAWoB,IAAK,aAAcJ,UAAU,KAClF6B,EAAU,CAACC,KAAM,WAAO,MAAO,CAAC5B,GAAI,OAAQlB,KAAM,UAAWoB,IAAK,aAAcJ,UAAU,KAqGjF+B,MAnGf,WAAgB,IAAD,EAEyBtB,oBAAS,GAFlC,mBAENuB,EAFM,KAEOC,EAFP,OAIaxB,mBAAsB,IAJnC,mBAINH,EAJM,KAIC4B,EAJD,KAMbC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,sEACeC,IADf,OACTC,EADS,OAEfJ,EAASI,GAFM,2CAAH,qDAIdC,KACC,IAEH,IAAMF,EAAU,uCAAG,8BAAAD,EAAA,+EAEGI,MAAM,+BAFT,cAETC,EAFS,gBAGIA,EAAIX,OAHR,cAGTY,EAHS,yBAIRA,GAJQ,yCAMfC,QAAQC,MAAM,sBANC,kBAORhB,KAPQ,0DAAH,qDAYViB,EAAS,uCAAG,WAAO3C,GAAP,iBAAAkC,EAAA,sEACEI,MAAM,+BAAD,OAAgCtC,IADvC,gDACgD2B,EADhD,cACVY,EADU,cAEGA,EAAIX,OAFP,cAEVY,EAFU,yBAITA,GAJS,4CAAH,sDAQTI,EAAO,uCAAG,WAAOjD,GAAP,iBAAAuC,EAAA,+EAEMI,MAAM,8BAA+B,CACrDO,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUtD,KAPX,cAEN4C,EAFM,gBAUOA,EAAIX,OAVX,OAUNY,EAVM,OAYZR,EAAS,GAAD,mBAAK5B,GAAL,CAAYoC,KAZR,kDAcZR,EAAS,GAAD,mBAAK5B,GAAL,aAAC,eAAeT,GAAhB,IAAsBK,GAAI,WAdtB,0DAAH,sDAmBPkD,EAAU,uCAAG,WAAOlD,GAAP,SAAAkC,EAAA,+EAETI,MAAM,+BAAD,OAAgCtC,GAAM,CAAC6C,OAAQ,WAF3C,uBAIfb,EAAS5B,EAAM+C,QAAO,SAACxD,GAAD,OAAUA,EAAKK,KAAOA,MAJ7B,uEAAH,sDASVoD,EAAc,uCAAG,WAAOpD,GAAP,qBAAAkC,EAAA,+EAEQS,EAAU3C,GAFlB,cAEbqD,EAFa,OAGbC,EAHa,2BAGKD,GAHL,IAGmBvD,UAAWuD,EAAavD,WAH3C,SAKDwC,MAAM,+BAAD,OAAgCtC,GAAM,CAC3D6C,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUK,KAVJ,cAKbf,EALa,iBAaAA,EAAIX,OAbJ,QAabY,EAba,OAenBR,EAAS5B,EAAMC,KAAI,SAACV,GAAD,OAAUA,EAAKK,KAAOA,EAAZ,2BAAsBL,GAAtB,IAA4BG,SAAU0C,EAAK1C,WAAaH,MAflE,kDAiBnBqC,EAAS5B,EAAMC,KAAI,SAAAV,GAAI,OAAIA,EAAKK,KAAOA,EAAZ,2BAAqBL,GAArB,IAA2BG,UAAWH,EAAKG,WAAYH,MAjB/D,0DAAH,sDAqBpB,OACE,cAAC,IAAD,UAEA,sBAAKX,UAAU,YAAf,UACE,cAAC,EAAD,CAAQK,MAAO,kBAAI0C,GAAgBD,IAAcxC,QAASwC,IAE1D,cAAC,IAAD,CAAOyB,KAAK,0BAA0BC,OAAK,EAACC,OAAQ,SAACC,GAAD,OAAY,qCAAG5B,GAAe,cAAC,EAAD,CAASzC,MAAOuD,IACjGxC,EAAMuD,OAAS,EAAI,cAAC,EAAD,CAAOvD,MAAOA,EAAOR,SAAUsD,EAAYrD,SAAUuD,IAAoB,6BAC7F,cAAC,IAAD,CAAOG,KAAK,+BAA+BK,UAAWnC,IACtD,cAAC,EAAD,UC1FSoC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASb,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.83ca510d.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { ButtonProps } from '../model/Props';\n\nconst Button:FunctionComponent<ButtonProps> = ({ color = 'steelblue', text, onClick }) => {\n    return (\n        <button\n            className='btn'\n            style={{ backgroundColor: color }}\n            onClick={onClick}>\n            {text}\n        </button>\n    )\n}\n\nexport default Button\n","import React, {FunctionComponent} from 'react';\nimport { useLocation } from 'react-router';\nimport Button from './Button';\nimport { HeaderProps } from '../model/Props';\n\n\nconst Header: FunctionComponent<HeaderProps> = ({title = 'Task Tracker', onAdd, showAdd}) => {\n    const location = useLocation();\n\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            {location.pathname === '/react-todo-tracker-ts/' && <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close': 'Add'} onClick={onAdd}/>}\n        </header>\n    )\n}\n\nexport default Header;","import React, { FunctionComponent } from 'react'\nimport { TaskProps } from '../model/Props';\n\nconst Task:FunctionComponent<TaskProps> = ({task, onDelete, onToggle}) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder': ''}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3>{task.text} <div style={{color: 'red', cursor:'pointer'}} onClick={() => onDelete(task.id)}>X</div></h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task;\n","import Task from './Task';\nimport { TasksProps } from '../model/Props';\nimport { FunctionComponent } from 'react';\n\nconst Tasks: FunctionComponent<TasksProps> = ({tasks, onDelete, onToggle}) => {\n    return (\n        <>\n            {tasks.map((task) => (\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}></Task>)\n            )}  \n        </>\n    )\n}\n\nexport default Tasks\n","import React, { FormEvent, FunctionComponent, useState } from \"react\";\nimport { NonIDTaskModel } from \"../model/TaskModel\";\n\ninterface AddTaskProps {\n    onAdd: (tm: NonIDTaskModel) => void;\n}\n\nconst AddTask:FunctionComponent<AddTaskProps> = ({ onAdd }) => {\n\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false);\n\n    const onSubmit = (e: FormEvent) => {\n        e.preventDefault()\n        if (!text) {\n            alert('Please add a task');\n            return;\n        }\n\n        onAdd({ text, day, reminder });\n        \n        setText('');\n        setDay('')\n        setReminder(false);\n    }\n\n    return (\n        <form className='add=form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Tasks</label>\n                <input type='text' placeholder='Add Task' className='form-control' value={text} onChange={(e) => setText(e.target.value)}></input>\n                <input type='text' placeholder='Add Day & Time' className='form-control' value={day} onChange={(e) => setDay(e.target.value)}></input>\n                <label>Set Reminder</label>\n                <input\n                    type='checkbox'\n                    className='form-control form-control-check'\n                    value={reminder.toString()}\n                    onChange={(e) => setReminder(e.currentTarget.checked)}\n                    checked={reminder}\n                ></input>\n            </div>\n\n            <input className='btn btn-block' type='submit' value=\"Save Task\"></input>\n        </form>\n    )\n}\n\nexport default AddTask\n","import React, {FunctionComponent} from 'react';\nimport {Link} from 'react-router-dom';\n\nconst Footer: FunctionComponent = () => {\n    return (\n        <footer>\n            <p> Copyright &copy; 2021</p>\n            <Link to=\"/react-todo-tracker-ts/about\">About</Link>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React, { FunctionComponent } from 'react';\nimport {Link} from 'react-router-dom';\n\nconst About: FunctionComponent = () => {\n    return (\n        <div>\n            <h4>Version 1.0.0</h4>\n            <Link to=\"/react-todo-tracker-ts/\">Go Back</Link>\n        </div>\n    )\n}\n\nexport default About;\n\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport Footer from './components/Footer';\nimport About from './components/About';\nimport { NonIDTaskModel, TaskModel } from \"./model/TaskModel\";\n\nconst mockup = {json: () => [{id: 142857, text: 'Only UI', day: '2021-07-13', reminder: false}]};\nconst mockup2 = {json: () => {return {id: 142857, text: 'Only UI', day: '2021-07-13', reminder: false}}}\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const [tasks, setTasks] = useState<TaskModel[]>([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    }\n    getTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    try {\n      const res = await fetch('http://localhost:5000/tasks')\n      const data = await res.json();\n      return data;\n    } catch (e) {\n      console.error('There is no server')\n      return mockup.json();\n    }\n\n  }\n\n  const fetchTask = async (id: string) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`) || mockup2\n    const data = await res.json()\n\n    return data;\n  }\n\n  // add Task\n  const addTask = async (task: NonIDTaskModel) => {\n    try {\n      const res = await fetch('http://localhost:5000/tasks', {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(task)\n      });\n  \n      const data = await res.json();\n  \n      setTasks([...tasks, data]);\n    } catch {\n      setTasks([...tasks, {...task, id: 'NaN'}])\n    }\n  }\n\n  // delete Task\n  const deleteTask = async (id: string) => {\n    try {\n      await fetch(`http://localhost:5000/tasks/${id}`, {method: 'DELETE'});\n    } finally {\n      setTasks(tasks.filter((task) => task.id !== id));\n    }\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id: string) => {\n    try {\n      const taskToToggle = await fetchTask(id);\n      const updatedTask = {...taskToToggle, reminder: !taskToToggle.reminder};\n  \n      const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(updatedTask)\n      })\n      \n      const data = await res.json();\n  \n      setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task))\n    } catch {\n      setTasks(tasks.map(task => task.id === id ? {...task, reminder: !task.reminder} : task));\n    }\n  }\n\n  return (\n    <Router>\n\n    <div className='container'>\n      <Header onAdd={()=>setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n\n      <Route path='/react-todo-tracker-ts/' exact render={(props) => (<>{showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : 'No Tasks To Show :-)'}</>)}/>\n      <Route path='/react-todo-tracker-ts/about' component={About}/>\n      <Footer />\n    </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}